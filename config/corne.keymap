/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define Default 0 
#define Qwerty 1 
#define Sym 2
#define Nav 3
#define SSy 4
#define Num 5
#define Fun 6

&sk {
    release-after-ms = <2000>;
    quick-release;
    /delete-property/ ignore-modifiers;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_k { 
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&kp K>;
        };

        combo_v { 
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp V>;
        };
    };
    behaviors {
        lm: left_hand_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <7 8 9 10 11 12 19 20 21 22 23 24 31 32 33 34 35 36 37 38 39 40 41 42>;
        };

        rm: right_hand_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1 2 3 4 5 6 13 14 15 16 17 18 25 26 27 28 29 30 37 38 39 40 41 42>;
        };

        ltsk: layer_toogle_sticky_key {
            compatible = "zmk,behavior-hold-tap"; 
            label = "SOMETHING";
            #binding-cells = <2>;
            tapping-term-ms = <300>; 
            bindings = <&mo>, <&sk>;
          };

    };
    keymap {
                compatible = "zmk,keymap";
                default_layer {// layer 0
                        bindings = <
        &kp TAB       &kp Q       &kp W      &kp F       &kp P       &kp B     /**/  &kp J      &kp L       &kp U        &kp Y       &kp SQT      &kp LG(N1)
        &lt Nav ESC   &lm LSHFT A &lm LALT R &lm LSHFT S &lm LCTRL T &lt SSy G /**/  &kp M      &rm LCTRL N &rm LSHFT E  &rm LALT I  &kp O        &kp LG(N2)
        &kp LC(SPACE) &kp Z       &kp X      &kp C       &lt Sym D  &kp V     /**/  &kp K      &lt Sym H  &kp COMMA    &kp DOT     &kp MINUS    &tog Qwerty 
        &ltsk Fun LSHFT           &lt Num BSPC           &kp SPACE             /**/  &lt Sym RET            &ltsk Num LSHFT          &kp LGUI
        >;
        };

                qwerty_layer { // layer 1
                        bindings = <
        &kp TAB       &kp Q    &lt Num W   &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I       &kp O      &kp P     &kp LG(N1)
        &lt Nav ESC   &kp A    &lm LALT S  &lm LSHFT D &lm LCTRL F &trans      &kp H       &rm LCTRL J &rm LSHFT K &rm LALT L &kp SQT   &kp LG(N2)
        &kp LC(SPACE) &kp Z    &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &kp COMMA   &kp DOT    &kp MINUS &tog Qwerty
                      &trans &trans   &trans      &trans      &trans      &trans          
        >;
        };

                symbol_layer { // layer 2
                        bindings = <
        &trans     &kp EXCL   &kp AT     &kp HASH   &kp DOLLAR &kp PRCNT  &kp AMPS   &kp LBRC   &kp LPAR   &kp RPAR   &kp RBRC   &trans
        &kp CAPS   &kp EQUAL  &kp PLUS   &kp STAR   &kp CARET  &trans     &kp TILDE  &kp SLASH  &kp BSLH   &kp QMARK  &kp GRAVE  &trans
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp UNDER  &trans     &trans     &trans     &trans
                   &trans     &kp DEL     &trans     &trans     &trans  &trans  
        >;
        };

                nav_layer {// layer 3
                        bindings = <
        &trans     &trans     &trans     &kp LC(RIGHT) &trans  &trans     &trans     &trans     &trans     &trans     &kp UP     &trans
        &trans     &trans     &trans     &kp LSHFT  &kp LCTRL  &trans     &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans     &trans
        &trans     &trans     &trans     &trans     &trans     &kp LC(LEFT) &kp DOWN &trans     &trans     &trans     &trans     &trans
                   &trans     &trans     &kp PSCRN     &kp PSCRN     &trans     &trans
        >;
        };

                sec_sym_layer {// layer 4
                        bindings = <
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp LT     &kp LBKT   &kp RBKT   &kp GT     &trans
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp PIPE   &kp SEMI   &kp COLON  &trans     &trans
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans
                   &trans     &trans     &trans     &trans     &trans     &trans
        >;
        };

                num_layer {// layer 5
                        bindings = <
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp N7    &kp N8   &kp N9     &trans     &kp LG(N3)
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp N1    &kp N2   &kp N3     &kp N0     &kp LG(N4)
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp N4    &kp N5   &kp N6     &trans     &trans
                   &trans     &trans     &kp 0      &kp 0      &trans     &trans
        >;
        };

                fun_layer {// layer 6
                        bindings = <
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp F7    &kp F8   &kp F9     &kp F10   &trans
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp F1    &kp F2   &kp F3     &kp F11   &trans
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp F4    &kp F5   &kp F6     &kp F12   &trans
                   &trans     &trans     &trans     &trans     &trans     &trans
        >;
        };
    };
};

