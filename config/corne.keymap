/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define Default 0 
#define Qwerty 1 
#define Sym 2
#define Nav 3
#define Num 4
#define Fun 5

&sk {
    release-after-ms = <2000>;
    quick-release;
};

&sl {
    release-after-ms = <2000>;
  };

/ {
    combos {
        compatible = "zmk,combos";
        combo_k { 
            timeout-ms = <50>;
            key-positions = <19 20>; // N+E 
            bindings = <&kp K>;
        };

        combo_v { 
            timeout-ms = <50>;
            key-positions = <15 16>; // S+T 
            bindings = <&kp V>;
        };
        combo_sticky_sym_right {
            timeout-ms = <50>;
            key-positions = <19 39>; // Ret+N
            bindings = <&sl Sym>;
        };
        combo_sticky_sym_left {
            timeout-ms = <50>;
            key-positions = <16 38>; // Space+T
            bindings = <&sl Sym>;
        };
    };
    behaviors {
        lm: left_hand_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 36 37 38 39 40 41>;
        };

        rm: right_hand_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        ltsl: layer_toogle_sticky_layer {
            compatible = "zmk,behavior-hold-tap"; 
            label = "LAYER_TOGGLE_STICKY_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <200>; 
            bindings = <&mo>, <&sl>;
        }; 


        ltsk: layer_toogle_sticky_key {
            compatible = "zmk,behavior-hold-tap"; 
            label = "SOMETHING";
            #binding-cells = <2>;
            tapping-term-ms = <200>; 
            bindings = <&mo>, <&sk>;
          };

    };

    keymap {
                compatible = "zmk,keymap";
                
                default_layer {// layer 0
                        bindings = <
        &kp TAB       &kp Q       &kp W      &kp F       &kp P       &kp B   /**/  &kp J      &kp L       &kp U        &kp Y       &kp SQT      &kp LG(N1)
        &lt Nav ESC   &kp A       &lm LALT R &lm LSHFT S &lm LCTRL T &kp G   /**/  &kp M      &rm LCTRL N &kp E        &rm LALT I  &kp O        &kp LG(N2)
        &kp LC(SPACE) &kp Z       &kp X      &kp C       &kp D       &kp V   /**/  &kp K      &kp H       &kp COMMA    &kp DOT     &kp MINUS     &kp LG(N3) 
                 &ltsl Fun Sym           &lt Num BSPC           &kp SPACE  /**/  &lt Sym RET            &ltsk Num LSHFT          &kp LGUI
        >;
        };

                qwerty_layer { // layer 1
                        bindings = <
        &kp TAB       &kp Q    &lt Num W   &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I       &kp O      &kp P     &trans
        &lt Nav ESC   &kp A    &lm LALT S  &lm LSHFT D &lm LCTRL F &trans      &kp H       &rm LCTRL J &rm LSHFT K &rm LALT L &kp SQT   &trans
        &kp LC(SPACE) &kp Z    &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &kp COMMA   &kp DOT    &kp MINUS &trans
                      &trans &trans   &trans      &trans      &trans      &trans          
        >;
        };

                symbol_layer { // layer 2
                        bindings = <
        &none      &kp EXCL   &kp AT     &kp HASH   &kp DOLLAR &kp PRCNT /**/ &kp AMPS   &kp LBRC   &kp LPAR   &kp RPAR   &kp RBRC   &kp LG(N4)
        &caps_word &kp EQUAL  &kp PLUS   &kp STAR   &kp CARET  &kp PIPE  /**/ &kp TILDE  &kp SLASH  &kp COLON  &kp QMARK  &kp GRAVE  &kp LG(N5)
        &none      &none      &none      &kp LT     &kp GT     &none     /**/ &kp SEMI   &kp UNDER  &kp LBKT   &kp RBKT   &kp BSLH   &kp LG(N6)
                                        &none      &kp DEL     &none     /**/ &none      &none   &none   
        >;
        };

                nav_layer {// layer 3
                        bindings = <
        &trans &trans   &trans &kp LC(MINUS) &kp LC(PLUS) &trans       /**/ &kp LC(LEFT) &kp PGDN   &kp PGUP   &kp LC(RIGHT) &trans     &kp LS(F10)
        &trans &kp LGUI &trans &kp LSHFT     &kp LCTRL    &trans       /**/ &kp LEFT     &kp DOWN   &kp UP     &kp RIGHT     &trans     &trans
        &trans &trans   &trans &trans        &trans       &kp LC(LEFT) /**/ &kp DOWN     &trans     &trans     &trans        &trans     &trans
                   &trans     &trans     &trans                     /**/   &trans     &trans     &trans
        >;
        };


                num_layer {// layer 4
                        bindings = <
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp N7    &kp N8   &kp N9     &trans     &kp LG(N7)
        &caps_word &trans     &trans     &trans     &trans     &trans     &trans     &kp N1    &kp N2   &kp N3     &kp N0     &kp LG(N8)
        &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp N4    &kp N5   &kp N6     &trans     &kp LG(N9)
                   &trans     &kp N0     &trans     &trans     &kp N0     &trans
        >;
        };

                fun_layer {// layer 5
                        bindings = <
        &trans     &trans     &trans     &trans        &kp PSCRN    &trans /**/ &trans     &kp F7    &kp F8   &kp F9     &kp F10   &trans
        &kp CAPS   &trans     &trans     &kp LC(MINUS) &kp LC(PLUS) &trans /**/ &trans     &kp F1    &kp F2   &kp F3     &kp F11   &trans
        &trans     &trans     &trans     &trans        &trans       &trans /**/ &trans     &kp F4    &kp F5   &kp F6     &kp F12   &trans
                   &trans     &trans     &trans                               &kp LS(F10)     &trans     &trans
        >;
        };
    };
};

