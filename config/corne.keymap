/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define Default 0 
#define Nav 1
#define Num 2
#define Fun 3
#define Sym 4
#define SFu 5
#define Win 6
#define tmux 7

&sk {
    release-after-ms = <500>;
    quick-release;
};

&sl {
    release-after-ms = <500>;
  };

/ {
    combos {
        compatible = "zmk,combos";
        combo_k { 
            timeout-ms = <50>;
            key-positions = <19 20>; // N+E 
            bindings = <&kp K>;
        };
        combo_v { 
            timeout-ms = <50>;
            key-positions = <15 16>; // S+T 
            bindings = <&kp V>;
        };
        combo_ret_right { 
            timeout-ms = <50>;
            key-positions = <7 8>; // L+U, 
            bindings = <&kp RET>;
        };
        combo_ret_left { 
            timeout-ms = <50>;
            key-positions = <3 4>; // F+P
            bindings = <&kp RET>;
        };
        combo_tmux_prefix_right {
            timeout-ms = <50>;
            key-positions = <19 38>; // Ret+N
            bindings = <&kp LC(SPACE)>;
        };
        combo_tmux_prefix_left {
            timeout-ms = <50>;
            key-positions = <16 38>; // Space+T
            bindings = <&kp LC(SPACE)>;
        };
        combo_bootloader_right {
            timeout-ms = <50>;
            layers = <SFu>;
            key-positions = <6 7>; // J+L
            bindings = <&bootloader>;
        };
        combo_bootloader_left {
            timeout-ms = <50>;
            layers = <Nav>;
            key-positions = <4 5>; // P+B
            bindings = <&bootloader>;
        };
    };

    macros {
        m_au: m_au {
            label = "macro_swedish_au";
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
            bindings
                = <&kp SCROLLLOCK &kp O &kp A>
                ;
        };
        m_eh: m_eh {
            label = "macro_swedish_eh";
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
            bindings
                = <&kp SCROLLLOCK &kp DOUBLE_QUOTES &kp A>
                ;
        };
        m_oo: m_oo {
            label = "macro_swedish_oo";
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
            bindings
                = <&kp SCROLLLOCK &kp DOUBLE_QUOTES &kp O>
                ;
        };
        tmx_right: tmx_right {
            label = "tmux_right";
            bindings = <&kp LC(SPACE) &kp N> ;
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
        };
        tmx_left: tmx_left {
            label = "tmux_left";
            bindings = <&kp LC(SPACE) &kp P> ;
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
        };
        tmx_cycl: tmx_cycl {
            label = "tmux_cycl";
            bindings = <&kp LC(SPACE) &kp O> ;
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
        };
        tmx_z: tmx_z {
            label = "tmux_z";
            bindings = <&kp LC(SPACE) &kp Z> ;
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
        };
        tmx_c: tmx_c {
            label = "tmux_c";
            bindings = <&kp LC(SPACE) &kp C> ;
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
        };
        tmx_bar: tmx_bar {
            label = "tmux_bar";
            bindings = <&kp LC(SPACE) &kp MINUS> ;
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
        };
        tmx_pipe: tmx_pipe {
            label = "tmux_pipe";
            bindings = <&kp LC(SPACE) &kp PIPE> ;
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
        };
        tmx_xy: tmx_xy {
            label = "tmux_xy";
            bindings = <&kp LC(SPACE) &kp X &kp Y> ;
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
        };
        tmx_y: tmx_y {
            label = "tmux_y";
            bindings = <&kp LC(SPACE) &kp Y> ;
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
        };
//        tmx_: tmx_ {
//            label = "tmux_";
//            bindings = <&kp LC(SPACE) &kp _> ;
//            compatible = "zmk,behavior-macro";
//            wait-ms = <40>;
//            tap-ms = <40>;
//            #binding-cells = <0>;
//        };
    };

    behaviors {
        llm: left_hand_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "left_home_row_mod";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11   18 19 20 21 22 23    30 31 32 33 34 35    36 37 38 39 40 41>;
        };

        lly: left_hand_homerow_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "left_home_row_layer";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11   18 19 20 21 22 23    30 31 32 33 34 35    36 37 38 39 40 41>;
        };

        rrm: right_hand_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "right_home_row_mod";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5    12 13 14 15 16 17    24 25 26 27 28 29    36 37 38 39 40 41>;
        };

        rry: right_hand_homerow_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "right_home_row_layer";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5    12 13 14 15 16 17    24 25 26 27 28 29    36 37 38 39 40 41>;
        };

        ltsl: layer_toogle_sticky_layer {
            compatible = "zmk,behavior-hold-tap"; 
            label = "LAYER_TOGGLE_STICKY_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <200>; 
            bindings = <&mo>, <&sl>;
        }; 


        ltsk: layer_toogle_sticky_key {
            compatible = "zmk,behavior-hold-tap"; 
            label = "SOMETHING";
            #binding-cells = <2>;
            tapping-term-ms = <200>; 
            bindings = <&mo>, <&sk>;
          };


        msk: mod_sticky_key {
            compatible = "zmk,behavior-hold-tap"; 
            label = "SOMETHING";
            #binding-cells = <2>;
            tapping-term-ms = <200>; 
            bindings = <&kp>, <&sk>;
          };
    };

    keymap {
                compatible = "zmk,keymap";
                default_layer {// layer 0
                        bindings = <
        &kp TAB       &kp Q       &lly Win W  &kp F            &lly Num P    &kp B       /**/  &kp J      &rry Num L    &kp U          &rry Win Y  &kp SQT    &ltsl Win Win
        &lt Nav ESC   &lly Nav A  &llm LALT R &llm LSHFT S     &llm LCTRL T  &lly tmux G /**/  &kp M      &rrm LCTRL N  &rrm LSHFT E   &rrm LALT I &kp O      &lt SFu DOUBLE_QUOTES
        &kp LC(SPACE) &kp Z       &kp X       &kp C            &kp D         &kp V       /**/  &kp K      &kp H         &kp COMMA      &kp DOT     &kp MINUS  &none
                &ltsl Fun Fun           &lt Num BSPC           &kp SPACE                 /**/  &ltsl Sym Sym     &key_repeat     &msk LSHFT LSHFT         
        >;
        };

                nav_layer {// layer 1
                        bindings = <
        &trans &trans   &trans &kp LC(MINUS) &kp LC(PLUS) &trans       /**/ &kp LC(LEFT) &kp PGDN   &kp PGUP   &kp LC(RIGHT) &trans     &m_au
        &trans &kp LGUI &trans &kp LSHFT     &kp LCTRL    &trans       /**/ &kp LEFT     &kp DOWN   &kp UP     &kp RIGHT     &trans     &m_eh
        &trans &trans   &trans &trans        &trans       &kp LC(LEFT) /**/ &kp DOWN     &trans     &trans     &trans        &trans     &m_oo
                   &kp LS(F10)     &kp BSPC     &kp SPACE              /**/   &kp RET     &trans     &trans
        >;
        };

                num_layer {// layer 2
                        bindings = <
        &trans     &kp TAB       &trans     &caps_word &kp LC(BSPC)  &sk LS(LCTRL) /**/ &m_au     &kp N7    &kp N8   &kp N9     &m_eh      &kp LG(N7)
        &trans     &kp ESC       &trans     &sk LSHFT  &kp BSPC      &trans        /**/ &kp GRAVE &kp N4    &kp N5   &kp N6     &kp N0     &kp LG(N8)
        &trans     &kp LC(SPACE) &kp LC(X)  &kp LC(C)  &kp LS(LC(V)) &kp LC(V)     /**/ &trans    &kp N1    &kp N2   &kp N3     &m_oo      &kp LG(N9)
                                        &trans     &kp BSPC   &trans               /**/   &kp RET     &kp LC(SPACE)   &trans
        >;
        };

                fun_layer {// layer 3
                        bindings = <
        &trans     &trans     &kp C_VOL_DN   &kp C_VOL_UP  &kp PSCRN    &trans /**/ &trans     &kp F7    &kp F8   &kp F9     &kp F10   &trans
        &kp CAPS   &trans     &kp C_PREV     &kp C_PP      &kp C_NEXT   &trans /**/ &trans     &kp F4    &kp F5   &kp F6     &kp F11   &trans
        &trans     &trans     &trans         &trans        &trans       &trans /**/ &trans     &kp F1    &kp F2   &kp F3     &kp F12   &trans
                                                  &trans     &trans     &trans /**/  &kp LS(F10)     &trans     &trans
        >;
        };

                symbol_layer { // layer 4
                        bindings = <
        &none   &kp EXCL   &kp AT     &kp HASH   &kp DOLLAR &kp PRCNT   /**/ &kp AMPS   &kp LBRC   &kp LPAR   &kp RPAR   &kp RBRC          &kp LG(N4)
        &kp ESC &kp EQUAL  &kp PLUS   &kp STAR   &kp CARET  &kp PIPE    /**/ &kp TILDE  &kp SLASH  &kp COLON  &kp QMARK  &kp DOUBLE_QUOTES &kp LG(N5)
        &none   &none      &none      &kp LT     &kp GT     &none       /**/ &kp SEMI   &kp UNDER  &kp LBKT   &kp RBKT   &kp BSLH          &kp LG(N6)
                                   &none   &kp DEL   &sk LSHFT   /**/   &kp RET    &caps_word   &none   
        >;
        };
                sec_func_layer {// layer 5
                        bindings = <
        &trans     &trans     &trans     &trans     &trans     &trans /**/ &trans    &kp LC(X)   &kp LC(V)     &trans    &trans     &trans
        &trans     &trans     &trans     &trans     &trans     &trans /**/ &trans    &kp LC(C)   &kp LS(LC(V)) &trans    &kp LC(Z)  &trans
        &trans     &trans     &trans     &trans     &trans     &trans /**/ &trans    &trans      &kp LS(LC(V)) &trans    &trans     &trans
                                        &trans     &trans   &trans    /**/   &kp LC(C)     &kp LS(LC(V))    &kp LC(Z)
        >;
        };
                window_layer {// layer 6
                        bindings = <
        &trans     &trans     &trans        &kp LG(UP)   &trans        &trans /**/ &trans    &kp LG(N7)  &kp LG(N8)    &kp LG(N9)    &trans     &trans
        &trans     &kp LSHFT  &kp LG(LEFT)  &kp LG(DOWN) &kp LG(RIGHT) &trans /**/ &trans    &kp LG(N4)  &kp LG(N5)    &kp LG(N6)    &trans     &trans
        &trans     &trans     &trans        &trans       &trans        &trans /**/ &trans    &kp LG(N1)  &kp LG(N2)    &kp LG(N3)    &trans     &trans
                                        &trans     &trans   &trans           /**/   &trans    &trans     &trans
        >;
        };
                tmux_layer {// layer 7
                        bindings = <
        &trans     &trans     &trans     &trans     &trans     &trans       /**/ &trans     &trans     &trans  &tmux_y     &trans    &trans
        &trans     &trans     &trans     &trans     &trans     &trans       /**/ &tmux_left &tmux_cycl &trans  &tmux_right &tmux_z   &trans
        &trans     &trans     &trans     &trans     &trans     &trans       /**/ &trans     &trans     &trans  &tmux_pipe  &tmux_bar &trans
                                        &trans     &tmux_xy   &kp LC(SPACE) /**/   &tmux_c     &trans     &trans
        >;
        };
    };
};

